from fealden.sensor import Sensor


def test_Sensor() -> None:
    EXPECTED_SENSOR = (
        "acttcgggacttgcttgaagcacgtgctattggtaccaatagtgagaagt,1.130352975773343,"
        "2,16,673.9453257075509,1114.7313270339453,1.6540382201829638,"
        "0.0,0.0,0.0,10.0,50,2,CACGTG"
    )

    actual = Sensor(
        (
            "acttcgggacttgcttgaagcacgtgctattggtaccaatagtgagaagt",
            [
                {
                    "deltaG": -4.155,
                    "bps": [
                        [1, 0],
                        [2, 0],
                        [3, 0],
                        [4, 0],
                        [5, 0],
                        [6, 0],
                        [7, 0],
                        [8, 0],
                        [9, 25],
                        [10, 24],
                        [11, 0],
                        [12, 22],
                        [13, 21],
                        [14, 20],
                        [15, 0],
                        [16, 0],
                        [17, 0],
                        [18, 0],
                        [19, 0],
                        [20, 14],
                        [21, 13],
                        [22, 12],
                        [23, 0],
                        [24, 10],
                        [25, 9],
                        [26, 0],
                        [27, 42],
                        [28, 41],
                        [29, 40],
                        [30, 39],
                        [31, 38],
                        [32, 37],
                        [33, 0],
                        [34, 0],
                        [35, 0],
                        [36, 0],
                        [37, 32],
                        [38, 31],
                        [39, 30],
                        [40, 29],
                        [41, 28],
                        [42, 27],
                        [43, 0],
                        [44, 0],
                        [45, 0],
                        [46, 0],
                        [47, 0],
                        [48, 0],
                        [49, 0],
                        [50, 0],
                    ],
                },
                {
                    "deltaG": -3.857,
                    "bps": [
                        [1, 0],
                        [2, 20],
                        [3, 19],
                        [4, 18],
                        [5, 17],
                        [6, 16],
                        [7, 15],
                        [8, 14],
                        [9, 0],
                        [10, 0],
                        [11, 0],
                        [12, 0],
                        [13, 0],
                        [14, 8],
                        [15, 7],
                        [16, 6],
                        [17, 5],
                        [18, 4],
                        [19, 3],
                        [20, 2],
                        [21, 0],
                        [22, 0],
                        [23, 0],
                        [24, 0],
                        [25, 0],
                        [26, 0],
                        [27, 42],
                        [28, 41],
                        [29, 40],
                        [30, 39],
                        [31, 38],
                        [32, 37],
                        [33, 0],
                        [34, 0],
                        [35, 0],
                        [36, 0],
                        [37, 32],
                        [38, 31],
                        [39, 30],
                        [40, 29],
                        [41, 28],
                        [42, 27],
                        [43, 0],
                        [44, 0],
                        [45, 0],
                        [46, 0],
                        [47, 0],
                        [48, 0],
                        [49, 0],
                        [50, 0],
                    ],
                },
            ],
        ),
        {"start": 21, "end": 27},
        {"start": -1, "end": -1},
        1,
        "2",
        "CACGTG",
    )

    assert repr(actual) == EXPECTED_SENSOR
